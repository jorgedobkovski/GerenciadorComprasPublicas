// <auto-generated />
using System;
using GerenciadorComprasPublicas.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GerenciadorComprasPublicas.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240601211442_quanitadeEValorItemLicitacao")]
    partial class quanitadeEValorItemLicitacao
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.Estoque", b =>
                {
                    b.Property<int>("EstoqueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EstoqueId"), 1L, 1);

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeAtual")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeMaxima")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeMinima")
                        .HasColumnType("int");

                    b.Property<int>("SecretariaId")
                        .HasColumnType("int");

                    b.HasKey("EstoqueId");

                    b.HasIndex("ItemId");

                    b.HasIndex("SecretariaId");

                    b.ToTable("Estoques");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.FaseLicitacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<int>("LicitacaoId")
                        .HasColumnType("int");

                    b.Property<string>("NomeFase")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("LicitacaoId");

                    b.ToTable("FasesLicitacao");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.Fornecedor", b =>
                {
                    b.Property<int>("FornecedorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FornecedorId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<double>("HistoricoPontualidade")
                        .HasColumnType("float");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double>("QualidadeMedia")
                        .HasColumnType("float");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("FornecedorId");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.HistoricoPreco", b =>
                {
                    b.Property<int>("HistoricoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoricoId"), 1L, 1);

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("HistoricoId");

                    b.HasIndex("ItemId");

                    b.ToTable("HistoricoPrecos");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"), 1L, 1);

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ItemId");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.Licitacao", b =>
                {
                    b.Property<int>("LicitacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LicitacaoId"), 1L, 1);

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("MotivoFracasso")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("QuantidadeItem")
                        .HasColumnType("int");

                    b.Property<int>("SecretariaId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("ValorEstimadoItem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorEstimadoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorHomologadoItem")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorHomologadoTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("LicitacaoId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("ItemId");

                    b.HasIndex("SecretariaId");

                    b.ToTable("Licitacoes");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.Orcamento", b =>
                {
                    b.Property<int>("OrcamentoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrcamentoId"), 1L, 1);

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<decimal>("SaldoDisponivel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SecretariaId")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorGasto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorPlanejado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrcamentoId");

                    b.HasIndex("SecretariaId");

                    b.ToTable("Orcamentos");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.PlanejamentoAnual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SecretariaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SecretariaId");

                    b.ToTable("PlanejamentosAnuais");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.PlanejamentoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DataUltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("PlanejamentoAnualId")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadePlanejada")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorEstimado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorGasto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("PlanejamentoAnualId");

                    b.ToTable("PlanejamentosItens");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.Secretaria", b =>
                {
                    b.Property<int>("SecretariaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SecretariaId"), 1L, 1);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("SecretariaId");

                    b.ToTable("Secretarias");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SecretariaId")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UsuarioId");

                    b.HasIndex("SecretariaId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.Estoque", b =>
                {
                    b.HasOne("GerenciadorComprasPublicas.Models.Item", "Item")
                        .WithMany("Estoques")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciadorComprasPublicas.Models.Secretaria", "Secretaria")
                        .WithMany()
                        .HasForeignKey("SecretariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Secretaria");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.FaseLicitacao", b =>
                {
                    b.HasOne("GerenciadorComprasPublicas.Models.Licitacao", "Licitacao")
                        .WithMany("FasesLicitacao")
                        .HasForeignKey("LicitacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Licitacao");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.HistoricoPreco", b =>
                {
                    b.HasOne("GerenciadorComprasPublicas.Models.Item", "Item")
                        .WithMany("HistoricosPreco")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.Licitacao", b =>
                {
                    b.HasOne("GerenciadorComprasPublicas.Models.Fornecedor", "Fornecedor")
                        .WithMany("Licitacoes")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciadorComprasPublicas.Models.Item", "Item")
                        .WithMany("Licitacoes")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciadorComprasPublicas.Models.Secretaria", "Secretaria")
                        .WithMany()
                        .HasForeignKey("SecretariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");

                    b.Navigation("Item");

                    b.Navigation("Secretaria");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.Orcamento", b =>
                {
                    b.HasOne("GerenciadorComprasPublicas.Models.Secretaria", "Secretaria")
                        .WithMany("Orcamentos")
                        .HasForeignKey("SecretariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Secretaria");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.PlanejamentoAnual", b =>
                {
                    b.HasOne("GerenciadorComprasPublicas.Models.Secretaria", "Secretaria")
                        .WithMany("PlanejamentosAnuais")
                        .HasForeignKey("SecretariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Secretaria");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.PlanejamentoItem", b =>
                {
                    b.HasOne("GerenciadorComprasPublicas.Models.Item", "Item")
                        .WithMany("Planejamentos")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GerenciadorComprasPublicas.Models.PlanejamentoAnual", "PlanejamentoAnual")
                        .WithMany("ItensPlanejados")
                        .HasForeignKey("PlanejamentoAnualId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("PlanejamentoAnual");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.Usuario", b =>
                {
                    b.HasOne("GerenciadorComprasPublicas.Models.Secretaria", "Secretaria")
                        .WithMany("Usuarios")
                        .HasForeignKey("SecretariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Secretaria");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.Fornecedor", b =>
                {
                    b.Navigation("Licitacoes");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.Item", b =>
                {
                    b.Navigation("Estoques");

                    b.Navigation("HistoricosPreco");

                    b.Navigation("Licitacoes");

                    b.Navigation("Planejamentos");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.Licitacao", b =>
                {
                    b.Navigation("FasesLicitacao");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.PlanejamentoAnual", b =>
                {
                    b.Navigation("ItensPlanejados");
                });

            modelBuilder.Entity("GerenciadorComprasPublicas.Models.Secretaria", b =>
                {
                    b.Navigation("Orcamentos");

                    b.Navigation("PlanejamentosAnuais");

                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
